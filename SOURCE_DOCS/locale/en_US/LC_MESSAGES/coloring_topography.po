# Whyjay Zheng <jhsttshj@gmail.com>, 2018. #zanata
# Whyjay Zheng <jhsttshj@gmail.com>, 2019. #zanata
msgid ""
msgstr ""
"Project-Id-Version: GMT 教學手冊 1.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-03-16 17:34-0400\n"
"PO-Revision-Date: 2021-02-25 02:22+0000\n"
"Last-Translator: Whyjay Zheng <wz278@cornell.edu>\n"
"Language: en_US\n"
"Language-Team: English (United States) "
"<https://hosted.weblate.org/projects/gmt-tutorials/coloring-"
"topography/en_US/>\n"
"Plural-Forms: nplurals=2; plural=n != 1\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../SOURCE_DOCS/coloring_topography.rst:3
msgid "為地形圖上色"
msgstr "Color the Topography"

#: ../../SOURCE_DOCS/coloring_topography.rst:7
msgid ""
"本教學適用於 GMT 6 的現代模式。如須參閱 GMT 6 (傳統模式) 與 GMT 4-5 繪製相同地圖的教程，\\ `請至這裡 "
"<coloring_topography_gmt5.html>`_。"
msgstr ""
"This instruction is for the Modern Mode in GMT 6. For making the same map"
" using the GMT 6 Classic Mode or GMT 4-5, `Please go to this page "
"<coloring_topography_gmt5.html>`_."

#: ../../SOURCE_DOCS/coloring_topography.rst:9
msgid "把地圖依照不同屬性、在不同區域著色，可以把龐大的資料有效視覺化。最常用來著色的屬性，高度絕對是其中之一。在典型的地形圖中，不同的海拔高度會套上不同的顏色。本章中將會詳細說明如何利用地表的不同高度，製作彩色的地形圖。"
msgstr ""
"To effectively visualize spatial data, one can use different colors on "
"the map based on different values. One of the most frequently used "
"datasets for coloring map is the surface elevation. For a classical "
"topological map, a specific color corresponds to a particular altitude. "
"In this chapter, we are going to see how to make a colored topological "
"map using elevation data."

#: ../../SOURCE_DOCS/coloring_topography.rst:12
msgid "目標"
msgstr "Goal"

#: ../../SOURCE_DOCS/coloring_topography.rst:13
msgid ""
"製作一張\\ `的的喀喀湖`_ (Lago Titicaca) 的分層設色地形圖，如下圖所示。的的喀喀湖位於秘魯和玻利維亞交界，面積達 8372 "
"平方公里。特殊的是，湖面位置的海拔高達 3812 公尺，是全世界最高的商業通航湖泊\\ "
"[#]_。圖中的藍色線條表示河流，注意右側的河流其實是亞馬遜河的源頭，而且並沒有和的的喀喀湖連接。黑色的虛線是兩國國界。地形圖的顏色從海拔 0 至"
" 5000 公尺，依循以下顏色過渡：綠色 -> 黃色 -> 紅色 -> 灰色 -> 白色，其中 2800 "
"公尺以上即開始以灰色系展示。這麼高的湖泊，位於一片白色系背景當中，更增添了些許雪國的氣氛 (實際上，的的喀喀湖冬天非常乾燥，幾乎不會下雪\\ "
"[#]_)。"
msgstr ""
"Make a color-coded topographical map of `Lake Titicaca`_ (Lago Titicaca),"
" as the following figure shows. Lake Titicaca is a large lake between "
"Peru and Bolivia with an area of 8372 km\\ :sup:`2`. It’s generally "
"recognized as the highest navigable lake in the world\\ [#]_, with a "
"surface elevation of 3812 m. The blue lines in the figure represent "
"rivers. Note that the river to the right is the upstream of the Amazon "
"River, which does not connect to Lake Titicaca. A blue dashed line "
"illustrates the political border between Peru and Bolivia. The height is "
"color-coded from 0 to 5000 m (following the sequence: green -> yellow -> "
"red -> gray -> white). All elevations above 2800 m are represented in "
"grayish colors. It may give you the impression that the area around Lake "
"Titicaca is the realm of snow since it is immersed in a white background,"
" but in fact, the winter at Lake Titicaca is so dry that it rarely snows "
"a lot\\ [#]_."

#: ../../SOURCE_DOCS/coloring_topography.rst:24
msgid "直接觀看\\ `指令稿`_"
msgstr "Go to the final `Script`_"

#: ../../SOURCE_DOCS/coloring_topography.rst:28
msgid "使用的指令與概念"
msgstr "Commands and Techniques"

#: ../../SOURCE_DOCS/coloring_topography.rst:30
msgid "``grdinfo`` - **查閱網格檔的基本資訊**"
msgstr "``grdinfo`` - **display basic information from a grid file**"

#: ../../SOURCE_DOCS/coloring_topography.rst:31
msgid "``grdimage`` - **繪製著色影像**"
msgstr "``grdimage`` - **plot colored image**"

#: ../../SOURCE_DOCS/coloring_topography.rst:32
msgid "``coast`` - **繪製河流、湖泊與國界**"
msgstr "``coast`` - **plot rivers, lakes, and borders**"

#: ../../SOURCE_DOCS/coloring_topography.rst:33
msgid "使用 GMT 伺服器的地形資料繪圖"
msgstr "Using the topographic data from the GMT server"

#: ../../SOURCE_DOCS/coloring_topography.rst:34
msgid "從 `cpt-city`_ 尋找適合地圖的色階檔"
msgstr "Search on `cpt-city`_ for a color ramp that fits your map"

#: ../../SOURCE_DOCS/coloring_topography.rst:35
msgid "如何疊加輸出圖層"
msgstr "How to overlay multiple layers"

#: ../../SOURCE_DOCS/coloring_topography.rst:36
msgid "使用腳本、``gmt begin`` 和 ``gmt end``，一次下達所有繪圖指令"
msgstr ""
"Run all of plotting commands in a script at once using ``gmt begin`` and "
"``gmt end``"

#: ../../SOURCE_DOCS/coloring_topography.rst:44
msgid "取得資料"
msgstr "Getting Data"

#: ../../SOURCE_DOCS/coloring_topography.rst:45
msgid ""
"這次我們必須要先取得繪圖區域的地形資料。GMT 6 "
"本身有提供全球的地形資料，不過是放在遠端伺服器上，當使用者需要時才會下載到本機電腦中。這些地形資料的檔名為："
msgstr ""
"Firstly we have to get the topographic data on our desired plotting "
"region. GMT 6 provides the global topographic data itself stored in a "
"remote server. Those data are only downloaded if needed. The name of the "
"dataset is:"

#: ../../SOURCE_DOCS/coloring_topography.rst:47
msgid "@earth_relief_rru"
msgstr "@earth_relief_rru"

#: ../../SOURCE_DOCS/coloring_topography.rst:51
msgid ""
"其中 ``rr`` 是解析度的大小，而 ``u`` 是單位 (有度 ``d``、分 ``m``、秒 ``s`` "
"可選)。我們在這邊要使用的是全球解析度 1 弧分的地形高程，因此檔名為 ``@earth_relief_01m``。其他可供選擇的資料，皆在 "
"`GMT 官方手冊中有說明 <https://docs.generic-mapping-"
"tools.org/latest/datasets/earth_relief.html>`_。如果你想查閱地形資料的更多資訊，可以透過終端機輸入 "
"``grdinfo`` 指令來達成。執行畫面會像如下所示："
msgstr ""
"Here ``rr`` is the pixel spacing, and ``u`` is its unit (``d`` for "
"degree, ``m`` for are-minute, and ``s`` for arc-second). We are going to "
"use the global topography in 1 arc-minute, and thus the corresponding "
"dataset name is ``@earth_relief_01m``. `The GMT official manual "
"<https://docs.generic-mapping-"
"tools.org/latest/datasets/earth_relief.html>`_ also tells you how to "
"access other available data. If you want to check your topo data for more"
" information, you can enter ``grdinfo`` in your terminal like what the "
"following panel shows:"

#: ../../SOURCE_DOCS/coloring_topography.rst:62
msgid ""
"$ gmt grdinfo @earth_relief_01m\n"
"earth_relief_01m: Download file from the GMT data server [data set size "
"is 214M].\n"
"earth_relief_01m: Earth Relief at 1x1 arc minutes obtained by Gaussian "
"Cartesian filtering (1.9 km fullwidth) of SRTM15+V2 [Tozer et al., 2019]."
"\n"
"\n"
"/home/whyj/.gmt/server/earth_relief_01m.grd: Title: Earth Relief at 01 "
"arc minute\n"
"/home/whyj/.gmt/server/earth_relief_01m.grd: Command: grdfilter "
"SRTM15+V2.nc -Fg1.9 -D1 -I01m -rg -Gearth_relief_01m.grd=ns "
"--IO_NC4_DEFLATION_LEVEL=9 --PROJ_ELLIPSOID=Sphere\n"
"/home/whyj/.gmt/server/earth_relief_01m.grd: Remark: Obtained by Gaussian"
" Cartesian filtering (1.9 km fullwidth) from SRTM15+V2.nc [Tozer et al., "
"2019; http://dx.doi.org/10.1029/2019EA000658]\n"
"/home/whyj/.gmt/server/earth_relief_01m.grd: Gridline node registration "
"used [Geographic grid]\n"
"/home/whyj/.gmt/server/earth_relief_01m.grd: Grid file format: ns = GMT "
"netCDF format (16-bit integer), CF-1.7\n"
"/home/whyj/.gmt/server/earth_relief_01m.grd: x_min: -180 x_max: 180 "
"x_inc: 0.0166666666667 (1 min) name: longitude n_columns: 21601\n"
"/home/whyj/.gmt/server/earth_relief_01m.grd: y_min: -90 y_max: 90 y_inc: "
"0.0166666666667 (1 min) name: latitude n_rows: 10801\n"
"/home/whyj/.gmt/server/earth_relief_01m.grd: z_min: -10907 z_max: 8170 "
"name: elevation (m)\n"
"/home/whyj/.gmt/server/earth_relief_01m.grd: scale_factor: 1 add_offset: "
"0\n"
"/home/whyj/.gmt/server/earth_relief_01m.grd: format: netCDF-4 chunk_size:"
" 129,129 shuffle: on deflation_level: 9"
msgstr ""
"$ gmt grdinfo @earth_relief_01m\n"
"earth_relief_01m: Download file from the GMT data server [data set size "
"is 214M].\n"
"earth_relief_01m: Earth Relief at 1x1 arc minutes obtained by Gaussian "
"Cartesian filtering (1.9 km fullwidth) of SRTM15+V2 [Tozer et al., 2019]."
"\n"
"\n"
"/home/whyj/.gmt/server/earth_relief_01m.grd: Title: Earth Relief at 01 "
"arc minute\n"
"/home/whyj/.gmt/server/earth_relief_01m.grd: Command: grdfilter "
"SRTM15+V2.nc -Fg1.9 -D1 -I01m -rg -Gearth_relief_01m.grd=ns "
"--IO_NC4_DEFLATION_LEVEL=9 --PROJ_ELLIPSOID=Sphere\n"
"/home/whyj/.gmt/server/earth_relief_01m.grd: Remark: Obtained by Gaussian"
" Cartesian filtering (1.9 km fullwidth) from SRTM15+V2.nc [Tozer et al., "
"2019; http://dx.doi.org/10.1029/2019EA000658]\n"
"/home/whyj/.gmt/server/earth_relief_01m.grd: Gridline node registration "
"used [Geographic grid]\n"
"/home/whyj/.gmt/server/earth_relief_01m.grd: Grid file format: ns = GMT "
"netCDF format (16-bit integer), CF-1.7\n"
"/home/whyj/.gmt/server/earth_relief_01m.grd: x_min: -180 x_max: 180 "
"x_inc: 0.0166666666667 (1 min) name: longitude n_columns: 21601\n"
"/home/whyj/.gmt/server/earth_relief_01m.grd: y_min: -90 y_max: 90 y_inc: "
"0.0166666666667 (1 min) name: latitude n_rows: 10801\n"
"/home/whyj/.gmt/server/earth_relief_01m.grd: z_min: -10907 z_max: 8170 "
"name: elevation (m)\n"
"/home/whyj/.gmt/server/earth_relief_01m.grd: scale_factor: 1 add_offset: "
"0\n"
"/home/whyj/.gmt/server/earth_relief_01m.grd: format: netCDF-4 chunk_size:"
" 129,129 shuffle: on deflation_level: 9"

#: ../../SOURCE_DOCS/coloring_topography.rst:79
msgid ""
"訊息的前兩行在有需要下載時才會出現。下載下來的檔案預設是放在 ``~/.gmt/server/`` 這個位置，之後 GMT "
"會先查看這個位置有沒有已經下載的檔案，如果沒有的話才會再次下載。下載檔檔名為 ``earth_relief_01m.grd``，副檔名 "
"``.grd`` 表明了它是某種「網格檔 (grid)」，亦即地球的二維表面被切割成網格狀，每個「格子」內，都有一個相對應的高度數據。(非常類似 "
"GeoTiff 的概念，只不過在 GeoTiff 中，相對應的術語稱為「像素」而非「網格點」。) ``.grd`` 檔是 netCDF "
"格式常見的附檔名，也就是說它可被 GMT 讀取並作圖。另外，從 ``grdinfo`` 的輸出中你還可以看到其他的基本資訊，像是"
msgstr ""
"The first two lines only appear when it needs to download the data from "
"the server. The downloaded files are stored in ``~/.gmt/server/`` by "
"default. The next time GMT will check if there are already the specified "
"files in this folder and will only download them again if the program "
"cannot find them. You can see that the downloaded file name is "
"``earth_relief_01m.grd``. The file extension ``.grd`` suggests that it’s "
"a “gridded” file. Imagine part of Earth’s surface is cut like a "
"chessboard, and every cell on this chessboard has one value that "
"represents the height of the surface. This is how a “gridded” surface "
"would look like. (The concept of GeoTiff is similar to this; however, we "
"call each chessboard value a “pixel,” not a “gridded point.”) The "
"extension ``.grd`` is commonly used for netCDF format, which can be "
"loaded and plotted by GMT. From the output text of ``grdinfo`` you can "
"also see"

#: ../../SOURCE_DOCS/coloring_topography.rst:81
msgid ""
"網格檔是從 `SRTM15+V2 <https://topex.ucsd.edu/WWW_html/srtm15_plus.html>`_ "
"這個資料庫重新取樣而來。"
msgstr ""
"The gridded data are resampled from a topography database called "
"`SRTM15+V2 <https://topex.ucsd.edu/WWW_html/srtm15_plus.html>`_."

#: ../../SOURCE_DOCS/coloring_topography.rst:82
msgid "X 從 -180 度到 180 度，Y 從 -90 度到 90 度，意味著此網格檔涵蓋全球的範圍。"
msgstr ""
"X is from -180 to 180 degrees, and Y is from -90 to 90 degrees. This "
"means the file covers the entire Earth's surface."

#: ../../SOURCE_DOCS/coloring_topography.rst:83
msgid "網格大小是 0.0166666666667，也就是 1/60 度 (1 弧分)。"
msgstr ""
"The size of each grid is 0.0166666666667, equal to one sixtieth degrees "
"(1 arc minute)."

#: ../../SOURCE_DOCS/coloring_topography.rst:84
msgid "總共有 21601 x 10801 = 233312401 個格點 (也就是兩億三千三百萬像素)。"
msgstr ""
"There are in total of 21,601 x 10,801 = 233,312,401 grid points (that is,"
" around one-fourth billion pixels!)."

#: ../../SOURCE_DOCS/coloring_topography.rst:85
msgid ""
"Z 值 (高度) 從 -10907 到 8170 公尺。為什麼最高的地方不是 8848 公尺 (聖母峰的高度)? "
"那是因為網格的解析度還是不夠高，1 弧分其實只相當於 1 至 2 公里才取一個點而已。"
msgstr ""
"Z value (height) is from -10907 to 8170 meters. The reason why the "
"highest point is not 8848 m (the elevation of Mt. Everest) is that the "
"resolution of this grid file is not high enough. A 1-arc-minute spacing "
"means we only take one height measurement every 1-2 km."

#: ../../SOURCE_DOCS/coloring_topography.rst:88
msgid "操作流程"
msgstr "Procedure"

#: ../../SOURCE_DOCS/coloring_topography.rst:89
msgid ""
"從本章開始，我們需要使用兩個以上的 GMT 指令製作地圖。在上一章介紹過的 ``coast`` 用來畫向量式資料 "
"(河流、湖泊以及國界)，而在本章中新介紹的 ``grdimage`` 則用來畫地形起伏。因為上一章介紹的 ``-png`` "
"選項只適用於單一指令，所以在本章我們要用另一種更通用的方式指定輸出檔。具體做法是使用 ``gmt begin`` 和 ``gmt end`` "
"這兩個關鍵字串把其他所有繪圖指令包起來，像這樣："
msgstr ""
"Starting from this chapter, we will need more than one GMT command to "
"make a map. ``coast`` (introduced in the previous chapter) is for "
"plotting vector data (rivers, lakes, and country borders), and "
"``grdimage`` (introduced in this chapter) is for plotting topography. In "
"the previous chapter, we introduced the ``-png`` option, but this way is "
"only for single-command mapping. Thus, we will use a more general method "
"to specify the output file in this chapter. It is the use of ``gmt "
"begin`` and ``gmt end`` to wrap all the other plotting commands, like "
"this:"

#: ../../SOURCE_DOCS/coloring_topography.rst:91
msgid ""
"$ gmt begin [輸出地圖主檔名，不用加附檔名] [格式]      # 輸入後按下 enter\n"
"$ [繪圖指令1]    # 輸入後按下 enter\n"
"$ [繪圖指令2]    # 輸入後按下 enter\n"
"...\n"
"$ gmt end"
msgstr ""
"$ gmt begin [map name without file extension] [format]      # when the "
"command is entered, press enter\n"
"$ [plotting command 1]    # when the command is entered, press enter\n"
"$ [plotting command 2]    # when the command is entered, press enter\n"
"...\n"
"$ gmt end"

#: ../../SOURCE_DOCS/coloring_topography.rst:100
msgid ""
"你可以一行一行的在命令列中打好指令再送出執行，不過為了修改方便，我們通常會選擇把所有的指令先寫在\\ :ref:`腳本 <腳本>`\\ "
"內，再執行此腳本以一次送出所有指令給電腦。在本章中，我們就要來介紹這種更爲便捷的方式。"
msgstr ""
"You can enter these commands line by line and run them separately, but "
"for the convenience of editing, we usually choose to write everything "
"down in a text :ref:`Script`. When you run this script, you send all "
"commands to the computer at once. We will introduce this way by showing "
"how to write a script in this chapter."

#: ../../SOURCE_DOCS/coloring_topography.rst:102
msgid ""
"畫地圖的第一步就是決定繪製區域。如同前一章「\\ :doc:`making_first_map`\\ 」所述，我們可以使用 *Google "
"Map* 等工具決定區域。這裡我們考慮到高度的呈現效果，選擇經度從 -70.8 到 -66.56 (負值表示西經)，緯度從 -17.17 到 "
"-14.42 (負值表示南緯。)"
msgstr ""
"Once we get the global topography data, the next step would be deciding "
"where on the Earth we want to plot (that is, map extent). Like we said in"
" the previous chapter :doc:`making_first_map`, we can use tools like "
"*Google Maps* to determine the region. Here we choose longitude from "
"-70.8 to -66.56 (negative number means W) and latitude from -17.17 to "
"-14.42 (negative number means S), based on the distribution of "
"elevations."

#: ../../SOURCE_DOCS/coloring_topography.rst:107
msgid "本次作圖區域在 `Google Map` 上呈現的樣子。"
msgstr "The map extent viewed on `Google Maps`."

#: ../../SOURCE_DOCS/coloring_topography.rst:109
msgid ""
"使用 ``grdimage`` 呈現地形數據，最少需要提供兩個參數，分別是 ``輸入檔`` 和 ``-J`` "
"(投影方法和地圖大小)。在這裡我們也需要使用 ``-R`` 指定繪製區域，如果不加 ``-R`` 的話，GMT 會把全網格檔的資料話在地圖上 "
"(因爲我們使用的是全球地形資料，所以輸出會是全球地圖)。就讓我們來畫一張跟\\ `前一章 <making_first_map.html>`_\\ "
"一樣寬度的地圖吧。請建立新文字檔，檔名可以為 ``titicaca.bash`` 或任何你喜歡、且符合作業系統格式慣例的名字。然後在檔案中輸入："
msgstr ""
"To use ``grdimage`` to plot topography, we need at least two arguments, "
"which are ``input file`` and ``-J`` (projection and map size). We also "
"need ``-R`` (map extent) here since GMT would plot all the gridded data "
"on the map without an ``-R`` setting. (This would be a global map in our "
"case because we are using a global topography dataset.) Let’s make a map "
"with the same size from the map in the `previous chapter "
"<making_first_map.html>`_. Please create a new text file, entitled "
"``titicaca.bash`` or whatever you like (it’s still better to fit your "
"system format convention). Enter the following lines:"

#: ../../SOURCE_DOCS/coloring_topography.rst:112
msgid ""
"gmt begin titicaca png\n"
"    gmt grdimage @earth_relief_01m -R-70.8/-17.17/-66.56/-14.42r -JM6i\n"
"gmt end"
msgstr ""
"gmt begin titicaca png\n"
"    gmt grdimage @earth_relief_01m -R-70.8/-17.17/-66.56/-14.42r -JM6i\n"
"gmt end"

#: ../../SOURCE_DOCS/coloring_topography.rst:118
msgid ""
"你會注意到我們在 ``gmt grdimage`` 前面多加了四個空格，這純粹只是製造縮排效果，讓閱讀腳本的人知道這行被包在 ``gmt "
"begin`` 和 ``gmt end`` 之間，增加腳本的可讀性。縮排與否和空格數量不會影響腳本的執行。如需 ``-R`` 與 ``-J`` "
"選項的語法說明，請至「\\ :doc:`making_first_map`\\ 」中查閱。存檔後，在\\ :ref:`終端機`\\ 模式下前往 "
"``titicaca.bash`` 所在的資料夾，然後執行腳本 (以 Linux 系統爲例)："
msgstr ""
"You may notice that we added four spaces before the ``gmt grdimage`` "
"command. This makes an indentation and lets the readers know that this "
"line is between ``gmt begin`` and ``gmt end`` for readability. The "
"indentation does not affect the script at all. For more information about"
" ``-R`` and ``-J`` options, please go to :doc:`making_first_map`. Save "
"you file, and in the :ref:`Terminal` mode, go to the folder where "
"``titicaca.bash`` is located and run the script. For example, type this "
"in Linux:"

#: ../../SOURCE_DOCS/coloring_topography.rst:120
msgid "$ bash titicaca.bash"
msgstr "$ bash titicaca.bash"

#: ../../SOURCE_DOCS/coloring_topography.rst:128
msgid "不同的作業系統的腳本會有不同的額外設定，可以讓你的腳本能夠更方便的執行，詳情請參閱「\\ :doc:`basic_concept`\\」。"
msgstr ""
"If you are running scripts on a platform other than Linux, there will be "
"some extra settings to make the script run more easily. Please see "
":doc:`basic_concept` for more details."

#: ../../SOURCE_DOCS/coloring_topography.rst:130
msgid "輸出的圖檔 ``titicaca.png`` 開啟後應該會是如下的圖案："
msgstr "Open the output file ``titicaca.png`` and you should see a map like this:"

#: ../../SOURCE_DOCS/coloring_topography.rst:137
msgid ""
"有點難以看懂？這是因為 GMT 預設的套色沒那麼適合這個地區的緣故。在未指定地圖的套色下繪製 ``@earth_relief`` "
"地形資料時，GMT 會用一套名為 ``geo`` 的色階來呈色。這個色階的顏色如下所示"
msgstr ""
"Hard to comprehend? This is because the default GMT color ramp doesn’t "
"fit this region quite well. If we don’t assign a color ramp for the "
"``@earth_relief`` topo data, GMT will use one called ``geo`` for the "
"output map. The color distribution of this color scheme is shown here:"

#: ../../SOURCE_DOCS/coloring_topography.rst:144
msgid ""
"圖中的 ``0`` 和 ``1`` "
"的顏色，也就是深藍色和白色，會對應到地圖範圍中最低和最高的的地方。有沒有辦法換成另一種比較好看的色階？當然可以，GMT "
"有數種方法可以製造或調整色階，但這邊我們要先來看一種最簡單的方法：直接下載已經做好的色階來用。"
msgstr ""
"The color of ``0`` and the color of ``1`` -- that is, dark blue and white"
" -- would correspond to the lowest and the highest point on the map. Is "
"there any way to replace it with a better color ramp? Of course, the "
"answer is yes; GMT has several ways to create your color ramp or adjust "
"an existing one, but here we are going to see the simplest method: "
"downloading a ready-to-use color ramp from the Internet."

#: ../../SOURCE_DOCS/coloring_topography.rst:146
msgid ""
"`cpt-city`_ 網站蒐集了不少常用的色階，其中也包括 GMT 格式的色階檔。GMT 色階檔通常使用副檔名 ``.cpt``，是 color"
" palette table (色階表) 的縮寫。你可以在網站中搜尋你想要的色階，例如\\ `這個網頁 "
"<http://soliton.vm.bytemark.co.uk/pub/cpt-city/views/totp-cpt.html>`_\\ "
"就列了許多最常被下載的 ``.cpt`` 檔。我們這次來用其中的一個叫做 ``mby`` 的色階看看。按下 ``mby`` "
"的色階表，你應該就會看到如下頁面"
msgstr ""
"The website `cpt-city`_ has collected many popular color ramps, including"
" those in the GMT format. GMT-formatted color ramps usually use the file "
"extension ``.cpt``, which represents \"color palette table\". You can "
"look for the color ramp you want on the website; for example, `this page "
"<http://soliton.vm.bytemark.co.uk/pub/cpt-city/views/totp-cpt.html>`_ "
"lists the most-downloaded ``.cpt`` files. Here we are going to use the "
"one called ``mby``. Click the ``mby`` color ramp, and you should see the "
"following page:"

#: ../../SOURCE_DOCS/coloring_topography.rst:151
msgid ""
"注意圖中的 **-8000 ... 5000**，這是指此色階已經被指定在 -8000 到 5000 公尺之內呈現了。按一下網頁上的 `cpt` "
"連結就可以把此色階檔下載下來。"
msgstr ""
"Note that the number **-8000 ... 5000** means that this color ramp has "
"been adjusted to illustrate elevations between -8000 and 5000 (meters). "
"Click the link to `cpt` on the page to download this color ramp."

#: ../../SOURCE_DOCS/coloring_topography.rst:153
msgid ""
"為了方便起見，\\ :download:`這邊 <coloring_topography/mby.cpt>`\\ 也提供了 ``mby.cpt``"
" 的下載點。"
msgstr ""
"For your convenience, We also provides the download link to ``mby.cpt`` "
"at :download:`here <coloring_topography/mby.cpt>`."

#: ../../SOURCE_DOCS/coloring_topography.rst:155
msgid ""
"使用 ``grdimage`` 中的 ``-C`` 選項，就可以指定要用的色階，只要在 ``-C`` "
"後接續色階檔檔名就行了。所以我們更新版的腳本為："
msgstr ""
"We can use the ``-C`` option in ``grdimage`` to assign a color ramp in "
"our map -- simply put the name of the ramp file directly after the ``-C``"
" and you are done. Here's our updated script:"

#: ../../SOURCE_DOCS/coloring_topography.rst:157
msgid ""
"gmt begin titicaca png\n"
"    gmt grdimage @earth_relief_01m -R-70.8/-17.17/-66.56/-14.42r -JM6i "
"-Cmby.cpt\n"
"gmt end"
msgstr ""
"gmt begin titicaca png\n"
"    gmt grdimage @earth_relief_01m -R-70.8/-17.17/-66.56/-14.42r -JM6i "
"-Cmby.cpt\n"
"gmt end"

#: ../../SOURCE_DOCS/coloring_topography.rst:163
msgid "使用相同的方式再執行一次腳本，這次地圖會變成這樣"
msgstr "Run the script again and your map would become this"

#: ../../SOURCE_DOCS/coloring_topography.rst:169
msgid "看起來已經有模有樣了。"
msgstr "Looks much better."

#: ../../SOURCE_DOCS/coloring_topography.rst:173
msgid ""
"有關於如何自訂色階表，讓地圖的顏色可以隨心所欲變化的技巧，請參閱「\\ :doc:`pen_and_painting`\\ 」與「\\ "
":doc:`editing_cpt_colorbar`\\ 」。"
msgstr ""
"If you want to customize your color ramp and use whichever color you like"
" on the map, please see \":doc:`pen_and_painting`\" and "
"\":doc:`editing_cpt_colorbar`.\""

#: ../../SOURCE_DOCS/coloring_topography.rst:175
msgid ""
"這個地圖目前有個大問題，就是我們雖然知道地圖中大部份的區域都很高 (灰白色)，但是卻看不到我們的主角\\ "
"`的的喀喀湖`_。這是因為地形資料只有記載高度，並沒有記載地表的狀態，所以光靠 ``grdimage`` "
"是無從得知哪邊是湖泊、海洋等等地貌的。因此，為了標上\\ `的的喀喀湖`_\\ 的位置，我們需要呼叫 ``coast`` "
"這個指令，利用內建的水體資料幫我們畫上湖泊，順便再畫上邊框。"
msgstr ""
"There is still a big issue on our map. We already know that this whole "
"area is mostly in high altitude (shown in gray-white), but we can't see "
"our primary target `Lake Titicaca`_. This is because the topographic data"
" only contain the heights and don't say anything about the types of land "
"cover. If we only use ``grdimage`` to plot these data, we will not be "
"able to know where the lakes or the seas are. So we have to call "
"``coast`` in order to mark the location of `Lake Titicaca`_\\ , draw the "
"water body, and put a map frame on it."

#: ../../SOURCE_DOCS/coloring_topography.rst:177
msgid ""
"當一張地圖包含兩個以上的作圖指令時，\\ **越上方的圖層要越後畫**。由於我們希望 ``coast`` 畫的湖泊水體疊加在 "
"``grdimage`` 畫的地形資料上，所以 ``coast`` 指令要排在 ``grdimage`` 之後。再次打開腳本，把內容修改爲："
msgstr ""
"When a map comes from two or more GMT plotting commands, **what lies "
"above should be plotted last**. Since we want the lake from ``coast`` "
"lied above the topo data from ``grdimage``, we have to put the line of "
"``coast`` command below the ``grdimage`` command. Open the script again "
"and change the content to:"

#: ../../SOURCE_DOCS/coloring_topography.rst:179
msgid ""
"gmt begin titicaca png\n"
"    gmt grdimage @earth_relief_01m -R-70.8/-17.17/-66.56/-14.42r -JM6i "
"-Cmby.cpt\n"
"    gmt coast -Scornflowerblue -Baf -B+t\"Lago Titicaca\"\n"
"gmt end"
msgstr ""
"gmt begin titicaca png\n"
"    gmt grdimage @earth_relief_01m -R-70.8/-17.17/-66.56/-14.42r -JM6i "
"-Cmby.cpt\n"
"    gmt coast -Scornflowerblue -Baf -B+t\"Lago Titicaca\"\n"
"gmt end"

#: ../../SOURCE_DOCS/coloring_topography.rst:186
msgid ""
"關於 ``coast`` 的指令解說，請至「\\ :doc:`making_first_map`\\ 」查看。另外，你或許會發現在 "
"``coast`` 中，沒有 ``-R`` 和 ``-J`` 選項。\\ **當不指定這些選項時，GMT 會自動沿用上次的設定**，也就是 "
"``grdimage`` 的 ``-R`` 與 ``-J`` 資訊，省下重複輸入相同內容的麻煩。"
msgstr ""
"Please go to :doc:`making_first_map` for using the ``coast`` options. In "
"addition, you may have noticed that there is no ``-R`` and ``-J`` options"
" in ``coast``. **When these options are not specified, GMT automatically "
"follows the settings from the last time**. That is, the settings of "
"``-R`` and ``-J`` from ``grdimage`` will be used here to save time from "
"entering the same content twice."

#: ../../SOURCE_DOCS/coloring_topography.rst:190
msgid ""
"``coast`` 的 ``-S`` 選項會套用在所有水域。如果你的地圖中有海又有湖，而你想分別為海跟湖指定不同顏色，可以試試看換成 ``-C``"
" 選項。因為本圖沒有海域，``-Scornflowerblue`` 和 ``-Cl/cornflowerblue`` "
"具有相同效果，不過後者其實只會為湖泊填上顏色。"
msgstr ""
"The ``-S`` option in ``coast`` is for every water body. If there are seas"
" and lakes in your map and you want to assign different colors for each "
"of them, ``-C`` option can do the job for you. There is no ocean area on "
"our map, so ``-Scornflowerblue`` and ``-Cl/cornflowerblue`` have the same"
" effect, although the latter only fills the color into lake areas."

#: ../../SOURCE_DOCS/coloring_topography.rst:192
msgid ""
"讓我們看一下 ``coast`` 中的兩個 ``-B`` 選項。實際上它們也可以加在 ``grdimage`` "
"中，因為邊框屬於哪個圖層在本例中不影響地圖疊加，所以效果會一模一樣。"
msgstr ""
"Let us take a look at two ``-B`` options at ``coast``. Actually, it is "
"also ok to put them in ``grdimage`` because which layer the map frame is "
"plotted on doesn't really matter, and it would look the same."

#: ../../SOURCE_DOCS/coloring_topography.rst:194
msgid "在終端機中執行腳本，然後開啟輸出檔，應該會看到下圖："
msgstr ""
"Run the updated script in the terminal and open the output file again. "
"You should see the following map:"

#: ../../SOURCE_DOCS/coloring_topography.rst:245
msgid ""
"這次總算有個令人滿意的輸出結果。接下來，我們還可以利用 ``coast`` 的其餘功能來美化這張地圖。首先是 "
"``-I``，它可以幫我們標上河流，語法為"
msgstr ""
"Now, this map is very close to what we want, and the final step is to use"
" other options in ``coast`` to decorate it. First, ``-I`` marks rivers on"
" the map, with the following syntax:"

#: ../../SOURCE_DOCS/coloring_topography.rst:247
msgid "-I編號/畫筆"
msgstr "-Inumber/pen"

#: ../../SOURCE_DOCS/coloring_topography.rst:251
msgid ""
"其中的\\ ``編號``\\ 可以為不同的英數字，對應到不同等級的河流；而\\ :ref:`畫筆 <畫筆>`\\ "
"則用來指定河流的繪圖樣式。這裡我們要使用 ``r`` 這個編號，它對應的是\\ **所有的永久河流**。畫筆樣式則使用 "
"``0.7p,cornflowerblue``。"
msgstr ""
"The ``number`` is an alphanumerical letter corresponding to different "
"levels of rivers in terms of size, and the :ref:`pen <pen>` is used for "
"giving the appearance of these rivers. Here we use the letter ``r``, "
"corresponding to **all permanent rivers**, and the pen style is "
"``0.7p,cornflowerblue``."

#: ../../SOURCE_DOCS/coloring_topography.rst:253
msgid "另外一個 ``coast`` 的選項是 ``-N``，它可以在地圖上標上政治性的邊界。語法同樣為"
msgstr ""
"Another ``coast`` option we are going to use is ``-N`` for plotting "
"political boundaries. Its syntax is similar:"

#: ../../SOURCE_DOCS/coloring_topography.rst:255
msgid "-N編號/畫筆"
msgstr "-Nnumber/pen"

#: ../../SOURCE_DOCS/coloring_topography.rst:259
msgid ""
"這裡的\\ ``編號``\\ 一樣可以為不同的英數字，對應到不同等級政治邊界 (國界、州界等)。我們要用的是 ``1``，亦即\\ "
"**標上國界**。至於畫筆樣式，則使用 ``0.7p,,--``，注意這裡我們空下了「顏色」的欄位，因此 GMT "
"會使用預設值「黑色」進行繪圖。在「線條樣式」欄位中，我們選擇 ``--``，這樣國界就會以虛線呈現。"
msgstr ""
"The ``number`` here, just like the previous one, is an alphanumerical "
"letter corresponding to different tiers of political boundaries "
"(national, state, etc.). We are going to use ``1``, which means "
"**national boundaries**. We use ``0.7,,--`` for pen attributes; note that"
" we omit the column of \"color,\" so GMT would use the default \"black\" "
"to plot these lines. Also, we choose ``--`` for \"line style\" so that "
"the boundaries will be plotted in dashed lines."

#: ../../SOURCE_DOCS/coloring_topography.rst:263
msgid "有關畫筆的進階樣式設定，例如設定線條樣式、利用 RGB 值自訂顏色等，會在「\\ :doc:`pen_and_painting`\\ 」詳加描述。"
msgstr ""
"For the advanced and detailed settings of the pen attributes, like line "
"styles or custom colors using RGB values, please go to "
":doc:`pen_and_painting`."

#: ../../SOURCE_DOCS/coloring_topography.rst:265
msgid "把 ``-N`` 和 ``-I`` 以及他們的設定參數加入我們的 ``coast`` 指令中，就完成了這次的地圖設計。"
msgstr ""
"Add ``-N`` and ``-I`` and their parameters to our ``coast`` command, and "
"the map design is done."

#: ../../SOURCE_DOCS/coloring_topography.rst:268
msgid "指令稿"
msgstr "Script"

#: ../../SOURCE_DOCS/coloring_topography.rst:270
msgid "本地圖的最終指令稿如下："
msgstr "The final script for our map is:"

#: ../../SOURCE_DOCS/coloring_topography.rst:272
msgid ""
"gmt begin titicaca png\n"
"    gmt grdimage @earth_relief_01m -R-70.8/-17.17/-66.56/-14.42r -JM6i "
"-Cmby.cpt\n"
"    gmt coast -Ir/0.7p,cornflowerblue -N1/0.7p,,-- -Scornflowerblue -Baf "
"-B+t\"Lago Titicaca\"\n"
"gmt end"
msgstr ""
"gmt begin titicaca png\n"
"    gmt grdimage @earth_relief_01m -R-70.8/-17.17/-66.56/-14.42r -JM6i "
"-Cmby.cpt\n"
"    gmt coast -Ir/0.7p,cornflowerblue -N1/0.7p,,-- -Scornflowerblue -Baf "
"-B+t\"Lago Titicaca\"\n"
"gmt end"

#: ../../SOURCE_DOCS/coloring_topography.rst:282
msgid ""
"「繪製地形設色圖：以 **70.8E - 66.56E，17.17S - 14.42S** 為邊界，麥卡托投影，地圖橫向寬 **6** "
"吋，套色使用 ``mby.cpt`` 內的色階表。使用 ``cornflowerblue`` "
"把湖泊和河流上色，畫上國界，四邊繪製邊框與刻度數值，自動選擇數值間隔與刻度間隔，不畫格線，標題為 *Lago Titicaca*，存檔為 "
"``titicaca.png``。」"
msgstr ""
"\"Plot the topographical map -- map extent is set to **(70.8E - "
"66.56E，17.17S - 14.42S)** in Mercator projection and **6** inches wide. "
"We use the color ramp from ``mby.cpt``, and plot the lake and rivers in "
"``cornflowerblue``. We also draw national borders, a map frame, and "
"annotation marks on the map, but the locations and the spacing of these "
"marks are automatically determined. We do not plot grid lines this time. "
"The map is entitled *Lago Titicaca* and saved as ``titicaca.png``.\""

#: ../../SOURCE_DOCS/coloring_topography.rst:284
msgid "觀看\\ `最終版地圖`_"
msgstr "Check the `final map`_"

#: ../../SOURCE_DOCS/coloring_topography.rst:287
msgid "PyGMT 指令稿"
msgstr ""

#: ../../SOURCE_DOCS/coloring_topography.rst:289
msgid "使用 PyGMT，可以如下腳本繪製本地圖："
msgstr ""

#: ../../SOURCE_DOCS/coloring_topography.rst:291
msgid ""
"import pygmt\n"
"\n"
"# 取得地形資料\n"
"region = [-70.8, -66.56, -17.17, -14.42]\n"
"grid = pygmt.datasets.load_earth_relief(resolution='01m', region=region)\n"
"\n"
"# 繪圖\n"
"fig = pygmt.Figure()\n"
"fig.grdimage(grid, region=region, projection='M6i', cmap='mby.cpt')\n"
"fig.coast(rivers='r/0.7p,cornflowerblue', borders='1/0.7p,,--', "
"water='cornflowerblue', frame=['af', '+t\"Lago Titicaca\"'])\n"
"fig.show()\n"
"fig.savefig('titicaca_pygmt.png')"
msgstr ""

#: ../../SOURCE_DOCS/coloring_topography.rst:306
msgid "你可以使用以下的 Binder 連結嘗試此程式碼："
msgstr ""

#: ../../SOURCE_DOCS/coloring_topography.rst:313
msgid "習題"
msgstr "Exercise"

#: ../../SOURCE_DOCS/coloring_topography.rst:315
msgid ""
"畫出貝加爾湖 (*Lake Baikal* 或 *Baygal nuur*) "
"與週邊區域的地形設色圖。貝加爾湖是全世界最深的湖泊，也是世界第七大湖，位於俄羅斯，南端接近蒙古的邊界。"
msgstr ""
"Make a colored topographical map of *Lake Baikal* (*Baygal nuur*) and its"
" surrounding area. Lake Baikal is the deepest lake and the seventh-"
"largest lake in the world. It is located in Russia, close to the boundary"
" of Mongolia in the south."

#: ../../SOURCE_DOCS/coloring_topography.rst:316
msgid "從地圖中可看到有幾條河流注入或流出貝加爾湖？"
msgstr "How many rivers are connected to Lake Baikal? Can you see that on the map?"

#: ../../SOURCE_DOCS/coloring_topography.rst:317
msgid "貝加爾湖週邊的海拔為何？湖底的海拔為何？你的地圖分別用什麼顏色表示這兩個海拔？"
msgstr ""
"How high is the area around Lake Baikal? How high is the bottom of Lake "
"Baikal? What colors are used to represent these two elevations on your "
"map?"

#: ../../SOURCE_DOCS/coloring_topography.rst:320
msgid ""
"`Data Summary: Lago Titicaca (Lake Titicaca). "
"<http://www.ilec.or.jp/database/sam/dsam04.html>`_ International Lake "
"Environment Committee Foundation - ILEC. Retrieved 2009-01-03."
msgstr ""
"`Data Summary: Lago Titicaca (Lake Titicaca). "
"<http://www.ilec.or.jp/database/sam/dsam04.html>`_ International Lake "
"Environment Committee Foundation - ILEC. Retrieved 2009-01-03."

#: ../../SOURCE_DOCS/coloring_topography.rst:322
msgid ""
"`ClClimatological Information for Juliaca, Peru. "
"<http://www.weather.gov.hk/wxinfo/climat/world/eng/s_america/ec_per/juliaca_e.htm>`_"
" Hong Kong Observatory."
msgstr ""
"`ClClimatological Information for Juliaca, Peru. "
"<http://www.weather.gov.hk/wxinfo/climat/world/eng/s_america/ec_per/juliaca_e.htm>`_"
" Hong Kong Observatory."

#~ msgid "@earth_relief_rru"
#~ msgstr "@earth_relief_rru"

#~ msgid ""
#~ "$ gmt grdinfo @earth_relief_01m\n"
#~ "earth_relief_01m: Download file from the "
#~ "GMT data server [data set size is"
#~ " 214M].\n"
#~ "earth_relief_01m: Earth Relief at 1x1 "
#~ "arc minutes obtained by Gaussian "
#~ "Cartesian filtering (1.9 km fullwidth) "
#~ "of SRTM15+V2 [Tozer et al., 2019].\n"
#~ ""
#~ "\n"
#~ "/home/whyj/.gmt/server/earth_relief_01m.grd: Title: Earth"
#~ " Relief at 01 arc minute\n"
#~ "/home/whyj/.gmt/server/earth_relief_01m.grd: Command: "
#~ "grdfilter SRTM15+V2.nc -Fg1.9 -D1 -I01m "
#~ "-rg -Gearth_relief_01m.grd=ns --IO_NC4_DEFLATION_LEVEL=9"
#~ " --PROJ_ELLIPSOID=Sphere\n"
#~ "/home/whyj/.gmt/server/earth_relief_01m.grd: Remark: "
#~ "Obtained by Gaussian Cartesian filtering "
#~ "(1.9 km fullwidth) from SRTM15+V2.nc "
#~ "[Tozer et al., 2019; "
#~ "http://dx.doi.org/10.1029/2019EA000658]\n"
#~ "/home/whyj/.gmt/server/earth_relief_01m.grd: Gridline node"
#~ " registration used [Geographic grid]\n"
#~ "/home/whyj/.gmt/server/earth_relief_01m.grd: Grid file "
#~ "format: ns = GMT netCDF format "
#~ "(16-bit integer), CF-1.7\n"
#~ "/home/whyj/.gmt/server/earth_relief_01m.grd: x_min: -180"
#~ " x_max: 180 x_inc: 0.0166666666667 (1 "
#~ "min) name: longitude n_columns: 21601\n"
#~ "/home/whyj/.gmt/server/earth_relief_01m.grd: y_min: -90"
#~ " y_max: 90 y_inc: 0.0166666666667 (1 "
#~ "min) name: latitude n_rows: 10801\n"
#~ "/home/whyj/.gmt/server/earth_relief_01m.grd: z_min: -10907"
#~ " z_max: 8170 name: elevation (m)\n"
#~ "/home/whyj/.gmt/server/earth_relief_01m.grd: scale_factor: "
#~ "1 add_offset: 0\n"
#~ "/home/whyj/.gmt/server/earth_relief_01m.grd: format: "
#~ "netCDF-4 chunk_size: 129,129 shuffle: on "
#~ "deflation_level: 9"
#~ msgstr ""
#~ "$ gmt grdinfo @earth_relief_01m\n"
#~ "earth_relief_01m: Download file from the "
#~ "GMT data server [data set size is"
#~ " 214M].\n"
#~ "earth_relief_01m: Earth Relief at 1x1 "
#~ "arc minutes obtained by Gaussian "
#~ "Cartesian filtering (1.9 km fullwidth) "
#~ "of SRTM15+V2 [Tozer et al., 2019].\n"
#~ ""
#~ "\n"
#~ "/home/whyj/.gmt/server/earth_relief_01m.grd: Title: Earth"
#~ " Relief at 01 arc minute\n"
#~ "/home/whyj/.gmt/server/earth_relief_01m.grd: Command: "
#~ "grdfilter SRTM15+V2.nc -Fg1.9 -D1 -I01m "
#~ "-rg -Gearth_relief_01m.grd=ns --IO_NC4_DEFLATION_LEVEL=9"
#~ " --PROJ_ELLIPSOID=Sphere\n"
#~ "/home/whyj/.gmt/server/earth_relief_01m.grd: Remark: "
#~ "Obtained by Gaussian Cartesian filtering "
#~ "(1.9 km fullwidth) from SRTM15+V2.nc "
#~ "[Tozer et al., 2019; "
#~ "http://dx.doi.org/10.1029/2019EA000658]\n"
#~ "/home/whyj/.gmt/server/earth_relief_01m.grd: Gridline node"
#~ " registration used [Geographic grid]\n"
#~ "/home/whyj/.gmt/server/earth_relief_01m.grd: Grid file "
#~ "format: ns = GMT netCDF format "
#~ "(16-bit integer), CF-1.7\n"
#~ "/home/whyj/.gmt/server/earth_relief_01m.grd: x_min: -180"
#~ " x_max: 180 x_inc: 0.0166666666667 (1 "
#~ "min) name: longitude n_columns: 21601\n"
#~ "/home/whyj/.gmt/server/earth_relief_01m.grd: y_min: -90"
#~ " y_max: 90 y_inc: 0.0166666666667 (1 "
#~ "min) name: latitude n_rows: 10801\n"
#~ "/home/whyj/.gmt/server/earth_relief_01m.grd: z_min: -10907"
#~ " z_max: 8170 name: elevation (m)\n"
#~ "/home/whyj/.gmt/server/earth_relief_01m.grd: scale_factor: "
#~ "1 add_offset: 0\n"
#~ "/home/whyj/.gmt/server/earth_relief_01m.grd: format: "
#~ "netCDF-4 chunk_size: 129,129 shuffle: on "
#~ "deflation_level: 9"

#~ msgid ""
#~ "$ gmt begin [輸出地圖主檔名，不用加附檔名] [格式]      # 輸入後按下 enter\n"
#~ "$ [繪圖指令1]    # 輸入後按下 enter\n"
#~ "$ [繪圖指令2]    # 輸入後按下 enter\n"
#~ "...\n"
#~ "$ gmt end"
#~ msgstr ""
#~ "$ gmt begin [output file name "
#~ "without extension] [file format]      # "
#~ "And press Enter\n"
#~ "$ [Plotting command 1]    # And press Enter\n"
#~ "$ [Plotting command 2]    # And press Enter\n"
#~ "...\n"
#~ "$ gmt end"

#~ msgid ""
#~ "gmt begin titicaca png\n"
#~ "    gmt grdimage @earth_relief_01m "
#~ "-R-70.8/-17.17/-66.56/-14.42r -JM6i\n"
#~ "gmt end"
#~ msgstr ""
#~ "gmt begin titicaca png\n"
#~ "    gmt grdimage @earth_relief_01m "
#~ "-R-70.8/-17.17/-66.56/-14.42r -JM6i\n"
#~ "gmt end"

#~ msgid "$ bash titicaca.bash"
#~ msgstr "$ bash titicaca.bash"

#~ msgid ""
#~ "gmt begin titicaca png\n"
#~ "    gmt grdimage @earth_relief_01m "
#~ "-R-70.8/-17.17/-66.56/-14.42r -JM6i -Cmby.cpt\n"
#~ "gmt end"
#~ msgstr ""
#~ "gmt begin titicaca png\n"
#~ "    gmt grdimage @earth_relief_01m "
#~ "-R-70.8/-17.17/-66.56/-14.42r -JM6i -Cmby.cpt\n"
#~ "gmt end"

#~ msgid ""
#~ "gmt begin titicaca png\n"
#~ "    gmt grdimage @earth_relief_01m "
#~ "-R-70.8/-17.17/-66.56/-14.42r -JM6i -Cmby.cpt\n"
#~ "    gmt coast -Scornflowerblue -Baf -B+t\"Lago Titicaca\"\n"
#~ "gmt end"
#~ msgstr ""
#~ "gmt begin titicaca png\n"
#~ "    gmt grdimage @earth_relief_01m "
#~ "-R-70.8/-17.17/-66.56/-14.42r -JM6i -Cmby.cpt\n"
#~ "    gmt coast -Scornflowerblue -Baf -B+t\"Lago Titicaca\"\n"
#~ "gmt end"

#~ msgid "-I編號/畫筆"
#~ msgstr "-Inumber/pen"

#~ msgid "-N編號/畫筆"
#~ msgstr "-Nnumber/pen"

#~ msgid ""
#~ "gmt begin titicaca png\n"
#~ "    gmt grdimage @earth_relief_01m "
#~ "-R-70.8/-17.17/-66.56/-14.42r -JM6i -Cmby.cpt\n"
#~ "    gmt coast -Ir/0.7p,cornflowerblue "
#~ "-N1/0.7p,,-- -Scornflowerblue -Baf -B+t\"Lago "
#~ "Titicaca\"\n"
#~ "gmt end"
#~ msgstr ""
#~ "gmt begin titicaca png\n"
#~ "    gmt grdimage @earth_relief_01m "
#~ "-R-70.8/-17.17/-66.56/-14.42r -JM6i -Cmby.cpt\n"
#~ "    gmt coast -Ir/0.7p,cornflowerblue "
#~ "-N1/0.7p,,-- -Scornflowerblue -Baf -B+t\"Lago "
#~ "Titicaca\"\n"
#~ "gmt end"

