# Whyjay Zheng <jhsttshj@gmail.com>, 2019. #zanata
# Whyjay Zheng <jhsttshj@gmail.com>, 2020. #zanata
msgid ""
msgstr ""
"Project-Id-Version: GMT 教學手冊 1.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-02-23 11:56-0500\n"
"PO-Revision-Date: 2021-02-26 22:45+0000\n"
"Last-Translator: Whyjay Zheng <wz278@cornell.edu>\n"
"Language-Team: English (United States) <https://hosted.weblate.org/projects/"
"gmt-tutorials/plot-vector-data/en_US/>\n"
"Language: en_US\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=n != 1;\n"
"X-Generator: Weblate 4.5\n"
"Generated-By: Babel 2.9.0\n"

#: ../../SOURCE_DOCS/plot_vector_data.rst:3
msgid "繪製向量式資料"
msgstr "Plot Vector Data"

#: ../../SOURCE_DOCS/plot_vector_data.rst:7
msgid ""
"本教學適用於 GMT 6 的現代模式。如須參閱 GMT 6 (傳統模式) 與 GMT 4-5 繪製相似圖片的教程，\\ `請至這裡 "
"<plot_vector_data_gmt5.html>`_。"
msgstr ""
"This instruction is for the Modern Mode in GMT 6. For making the same map"
" using the GMT 6 Classic Mode or GMT 4-5, `Please go to this page "
"<plot_vector_data_gmt5.html>`_."

#: ../../SOURCE_DOCS/plot_vector_data.rst:9
msgid ""
"地理空間資料通常會以網格形式或向量形式儲存。所謂的向量式資料，其實就是描述「點、線、面」位置與形狀的資料。有關於如何繪製點資料的技巧，我們已經在「\\"
" :doc:`scatter_plot`\\ 」一章中提及，因此在本章中，將會說明如何利用 GMT 繪製線段以及多邊形、簡介與 GMT "
"相容的向量式資料檔案格式，以及透明度的設定--這種填色技巧非常適合用在常常需要疊在一起呈現的向量式資料上。"
msgstr ""
"Geospatial data are often stored as a raster or a vector format. The so-"
"called vector data describe the locations and the shapes of points, "
"lines, and polygons. We have mentioned how to plot point data in the "
"chapter :doc:`scatter_plot`, and in this chapter we are going to show you"
" how to plot line segments and polygons using GMT. In addition, we will "
"also describe a bit about the GMT-compatible vector file format, and how "
"to set up transparency -- a useful way to illustrate a map with many "
"layers of vector data."

#: ../../SOURCE_DOCS/plot_vector_data.rst:12
msgid "目標"
msgstr "Goal"

#: ../../SOURCE_DOCS/plot_vector_data.rst:13
#, python-format
msgid ""
"繪製一張\\ `七巧板 "
"<https://zh.wikipedia.org/wiki/%E4%B8%83%E5%B7%A7%E6%9D%BF>`_\\ "
"的盤面，如下所示。七巧板是一種類似拼圖的玩具，遊玩目標通常是利用 7 個多邊形拼出指定的圖案。這邊拼出的是正方形，也是所有的圖案裡最基本的一種。"
msgstr ""
"Draw a `tangram <https://en.wikipedia.org/wiki/Tangram>`_ like this one. "
"The tangram is a dissection puzzle and your goal is usually to combine "
"all 7 pieces to form the assigned figure. Here the figure is a square, "
"the most basic one among all possible figures."

#: ../../SOURCE_DOCS/plot_vector_data.rst:15
msgid "在此圖中，七個多邊形顏色均不相同，但都有黑色邊緣，而且在盤面上還有淡色的棋盤式格子，可以幫助你計算每個多邊形的大小。要讓這些線條與多邊形的顏色同時呈現，我們必須要在色階檔中加上透明度的設定，並且使用不同的出圖指令。"
msgstr ""
"In this figure, each polygon piece has a distinct color and a black edge."
" Also on the figure are pale-gray grid lines that can help to calculate "
"the area of each polygon. To make all of them appear on a single figure, "
"we have to add the transparency settings to the colormap using an "
"additional option for ``makecpt``."

#: ../../SOURCE_DOCS/plot_vector_data.rst:23
msgid "直接觀看\\ `指令稿`_"
msgstr "Go to the final `Script`_"

#: ../../SOURCE_DOCS/plot_vector_data.rst:27
msgid "使用的指令與概念"
msgstr "Commands and Techniques"

#: ../../SOURCE_DOCS/plot_vector_data.rst:28
msgid "``makecpt`` - **製作含有透明度設定的離散色階檔**"
msgstr "``makecpt`` - **make a colormap with transparency settings**"

#: ../../SOURCE_DOCS/plot_vector_data.rst:29
msgid "``basemap`` - 設定作圖區的基本資訊"
msgstr "``basemap`` - set up info of the mapping area"

#: ../../SOURCE_DOCS/plot_vector_data.rst:30
msgid "``plot`` - **繪製線段與多邊形**"
msgstr "``plot`` - **plot segments and polygons**"

#: ../../SOURCE_DOCS/plot_vector_data.rst:34
msgid "操作流程"
msgstr "Procedure"

#: ../../SOURCE_DOCS/plot_vector_data.rst:35
msgid ""
"在「\\ :doc:`scatter_plot`」中我們看到 ``plot`` 如何處理點資料。如要處理線段資料和多邊形資料，我們可以使用相同的 "
"``plot`` 語法："
msgstr ""
"In :doc:`scatter_plot`, we have seen how ``plot`` deals with point data. "
"For processing segments and polygons, we can use the same ``plot`` "
"syntax:"

#: ../../SOURCE_DOCS/plot_vector_data.rst:37
msgid "$ gmt plot 輸入檔名稱 [選項...]"
msgstr "$ gmt plot input_file [-options]"

#: ../../SOURCE_DOCS/plot_vector_data.rst:41
msgid "線段顧名思義，就是很多個頂點連起來的線條。GMT 接受以純文字格式記載的線段資料，如下所示："
msgstr ""
"As its name suggest, a segment is just a connection between two or more "
"points (vertice). GMT accepts segment data in text (ascii) format as "
"follows:"

#: ../../SOURCE_DOCS/plot_vector_data.rst:43
msgid ""
"# (所有以 # 號開頭的行都會被解讀成註解)\n"
"> [線段 1 的設定]\n"
"線段 1 的頂點 1\n"
"線段 1 的頂點 2\n"
"...\n"
"> [線段 2 的設定]\n"
"線段 2 的頂點 1\n"
"線段 2 的頂點 2\n"
"...\n"
"> [線段 3 的設定]\n"
"..."
msgstr ""
"# (all lines starting with \\\"#\\\" will be interpreted as comments)\n"
"> [settings of segment 1]\n"
"segment 1, vertex 1\n"
"segment 1, vertex 2\n"
"...\n"
"> [settings of segment 2]\n"
"segment 2, vertex 1\n"
"segment 2, vertex 2\n"
"...\n"
"> [settings of segment 3]\n"
"..."

#: ../../SOURCE_DOCS/plot_vector_data.rst:57
msgid ""
"如果是二維線段，頂點就是兩欄資料，分別為 X 座標和 Y 座標。因為是線段，所以每條線至少都要有 2 個頂點。不同線段之間預設以 ``>`` "
"符號隔開，符號後方可以接上 ``-W`` 或者 ``-Z``，代表 ``plot`` 在畫圖時會對這條線使用的繪圖選項："
msgstr ""
"If you are plotting a 2-D segment, your vertices would take 2 columns, which "
"are X and Y coordinates respectively. Every segment must have at least 2 "
"vertices. The ``>`` symbol is used to separate each segment, and after that "
"we can add ``-W`` or ``-Z`` settings in the same line. They indicate the "
"drawing options for the corresponding segment:"

#: ../../SOURCE_DOCS/plot_vector_data.rst:59
msgid "``-W``：指定畫筆樣式"
msgstr "``-W``: specify pen style"

#: ../../SOURCE_DOCS/plot_vector_data.rst:60
msgid "``-Z``：藉由給定色階檔的數值指定顏色"
msgstr ""
"``-Z``: specify color by giving a value (which will be later linked to a "
"colormap)"

#: ../../SOURCE_DOCS/plot_vector_data.rst:62
msgid ""
"詳細的說明請參考\\ `這裡 <https://docs.generic-mapping-tools.org/6.0/plot.html"
"#segment-header-parsing>`_。我們就來研究一下，如果要畫出七巧板的背景網格，需要怎麼樣的線段檔案："
msgstr ""
"For detailed information, please go to `this page <https://docs.generic-"
"mapping-tools.org/6.0/plot.html#segment-header-parsing>`_. Now let's take"
" a look at how to design the segment data for the background grid lines "
"on the tangram figure:"

#: ../../SOURCE_DOCS/plot_vector_data.rst:64
msgid ""
"> -W3p,black,.\n"
"1 0\n"
"1 4\n"
">\n"
"2 0\n"
"2 4\n"
">\n"
"3 0\n"
"3 4\n"
">\n"
"0 1\n"
"4 1\n"
">\n"
"0 2\n"
"4 2\n"
">\n"
"0 3\n"
"4 3"
msgstr ""
"> -W3p,black,.\n"
"1 0\n"
"1 4\n"
">\n"
"2 0\n"
"2 4\n"
">\n"
"3 0\n"
"3 4\n"
">\n"
"0 1\n"
"4 1\n"
">\n"
"0 2\n"
"4 2\n"
">\n"
"0 3\n"
"4 3"

#: ../../SOURCE_DOCS/plot_vector_data.rst:85
msgid ""
"在此檔案中，總共有 6 條線段，前三條是直線，後三條是橫線。以第 1 條為例，它是從座標 (1, 0) 到 (1, 4) 的線段。第一條線段的 "
"``>`` 符號後面有 ``-W`` 設定，意味著這條線要使用黑色、點點樣式和 3p 寬度來繪製。之後所有的 ``>`` "
"符號後面都沒有任何設定，當 ``plot`` 在繪圖的時候，會\\ **自動沿用之前已經設定過的參數值**\\ "
"，因此後五條線畫出來的外觀會與第一條相同。把檔案存為 ``lines.txt``，然後使用如下指令，就可以畫出背景網格。"
msgstr ""
"There are 6 segments in this file; the first three are vertical, and the "
"last three are horizontal. Take the first segment for example, it is a "
"segment from coordinate (1, 0) to (1, 4). To the right of the ``>`` symbol "
"of the first segment, we can see a ``-W`` option, which means this segment "
"would be plotted as a black, dotted, 3-point wide line. There are no options "
"associated with all the other ``>`` symbols. When ``plot`` is reading this "
"file, it would **automatically use the previous value for the next segment**"
". Hence, all the other segments will use the same line style from this first "
"segment. Save this file as ``lines.txt``, and enter the following command to "
"plot the background grid."

#: ../../SOURCE_DOCS/plot_vector_data.rst:87
#: ../../SOURCE_DOCS/plot_vector_data.rst:230
msgid "$ gmt plot lines.txt -R0/4/0/4 -JX15c -png lines"
msgstr "$ gmt plot lines.txt -R0/4/0/4 -JX15c -png lines"

#: ../../SOURCE_DOCS/plot_vector_data.rst:95
msgid ""
"看起來還不錯！接下來讓我們看一下要怎麼畫多邊形。其實多邊形資料與線段大同小異，就是把所有的頂點座標紀錄在檔案內而已；不過，多邊形的頂點數目最少要有"
" 3 個。GMT 可接受的多邊形檔案格式，如下所示："
msgstr ""
"Looks not bad! Now it's time to deal with the polygons. In fact, the "
"polygon data format is very similar to the segment data since it also "
"records only the vertices in the file. However, you have to have at least"
" three vertice to form a polygon. The GMT-acceptable polygon format is "
"like this:"

#: ../../SOURCE_DOCS/plot_vector_data.rst:97
msgid ""
"> [多邊形 1 的設定]\n"
"多邊形 1 的頂點 1\n"
"多邊形 1 的頂點 2\n"
"多邊形 1 的頂點 3\n"
"...\n"
"> [多邊形 2 的設定]\n"
"..."
msgstr ""
"> [settings of polygon 1]\n"
"polygon 1 vertex 1\n"
"polygon 1 vertex 2\n"
"polygon 1 vertex 3\n"
"...\n"
"> [settings of polygon 2]\n"
"..."

#: ../../SOURCE_DOCS/plot_vector_data.rst:107
msgid ""
"分隔符號後方可以接上 ``-W``、``-Z`` 或 ``-G`` (詳細的說明請參考\\ `這裡 <https://docs.generic-"
"mapping-tools.org/6.0/plot.html#segment-header-parsing>`_\\ )："
msgstr ""
"We can also add ``-W``, ``-Z``, and/or ``-G`` options after the ``>`` symbol "
"(see `this page <https://docs.generic-mapping-tools.org/6.0/plot.html"
"#segment-header-parsing>`_ for details):"

#: ../../SOURCE_DOCS/plot_vector_data.rst:109
msgid "``-W``：指定多邊形的外框畫筆樣式"
msgstr "``-W``: specify pen style for polygon edges"

#: ../../SOURCE_DOCS/plot_vector_data.rst:110
msgid "``-Z``：藉由給定色階檔的數值指定多邊形填色"
msgstr ""
"``-Z``: specify a filling color by giving a value (which will be later "
"linked to a colormap)"

#: ../../SOURCE_DOCS/plot_vector_data.rst:111
msgid "``-G``：直接指定多邊形填色"
msgstr "``-G``: specify a polygon filling color directly"

#: ../../SOURCE_DOCS/plot_vector_data.rst:113
msgid "例如，要畫出七巧板上的圖形，我們可以使用如下的檔案內容："
msgstr ""
"For example, we can use the following content to draw all the polygons in"
" a tangram:"

#: ../../SOURCE_DOCS/plot_vector_data.rst:115
#: ../../SOURCE_DOCS/plot_vector_data.rst:328
msgid ""
"> -Z0\n"
"0 0\n"
"2 2\n"
"4 0\n"
"> -Z3\n"
"0 0\n"
"2 2\n"
"0 4\n"
"> -Z6\n"
"0 4\n"
"1 3\n"
"2 4\n"
"> -Z9\n"
"1 3\n"
"2 4\n"
"3 3\n"
"2 2\n"
"> -Z12\n"
"3 3\n"
"2 2\n"
"3 1\n"
"> -Z15\n"
"3 1\n"
"3 3\n"
"4 2\n"
"4 0\n"
"> -Z18\n"
"2 4\n"
"4 2\n"
"4 4"
msgstr ""
"> -Z0\n"
"0 0\n"
"2 2\n"
"4 0\n"
"> -Z3\n"
"0 0\n"
"2 2\n"
"0 4\n"
"> -Z6\n"
"0 4\n"
"1 3\n"
"2 4\n"
"> -Z9\n"
"1 3\n"
"2 4\n"
"3 3\n"
"2 2\n"
"> -Z12\n"
"3 3\n"
"2 2\n"
"3 1\n"
"> -Z15\n"
"3 1\n"
"3 3\n"
"4 2\n"
"4 0\n"
"> -Z18\n"
"2 4\n"
"4 2\n"
"4 4"

#: ../../SOURCE_DOCS/plot_vector_data.rst:148
msgid ""
"第一個多邊形是七巧板底部的大三角形，座標從 (0, 0)、(2, 2) 到 (4, "
"0)，各位可以試試看找出其他六個多邊形分別是什麼形狀。注意在每個多邊形的 ``>`` 後方都有 ``-Z`` "
"設定，代表著我們只要給定色階檔，GMT 就會自動的依照 Z 值與色階檔的對應，為每個多邊形填上不同的顏色。在 GMT 中，有一個稱為「\\ "
"**wysiwyg**\\ [#]_\\ 」的色階檔，最適合用來當這種依照數值指定不同種類顏色的參考色階。它的顏色如下所示："
msgstr ""
"The first polygon is the triangle at the bottom of the tangram. Its "
"vertices are (0, 0), (2, 2), and (4, 0). You can try to figure out what "
"other polygons represent what shape! Note that for each polygon, there is"
" a ``-Z`` setting after ``>``, which means GMT will automatically fill "
"the polygon using this as the value to looking up the color from the "
"colormap. There is a built-in colormap in GMT called **wysiwyg** [#]_, "
"very suitable for categorical filling like this case. Here's its color "
"combination:"

#: ../../SOURCE_DOCS/plot_vector_data.rst:153
msgid "把以上的文字檔案另存成 ``pieces.txt``，然後使用如下的指令繪圖："
msgstr "Save the text as ``pieces.txt`` and make the figure using these commands:"

#: ../../SOURCE_DOCS/plot_vector_data.rst:155
msgid ""
"gmt begin pieces png\n"
"    gmt makecpt -Cwysiwyg -T0/20/1    # 色階數值範圍為 0 至 20，每隔 1 取樣\n"
"    gmt plot pieces.txt -R0/4/0/4 -JX15c -L -C\n"
"gmt end"
msgstr ""
"gmt begin pieces png\n"
"    gmt makecpt -Cwysiwyg -T0/20/1    # colormap range is 0 to 20, sampled "
"with an interval of 1\n"
"    gmt plot pieces.txt -R0/4/0/4 -JX15c -L -C\n"
"gmt end"

#: ../../SOURCE_DOCS/plot_vector_data.rst:162
msgid ""
"注意這裡的 ``-L``，這個參數會告訴 ``plot`` 我們畫的是多邊形，如此一來 ``plot`` 就會\\ "
"**強制封閉線段**。另外，在畫多邊形的時候，``plot`` 指令的預設行為是畫邊而且不填色。因此，要加上 ``-C`` 告訴 GMT "
"我們要用新創造的色階檔對多邊形填色。"
msgstr ""
"Note that the ``-L`` option would tell ``plot`` that we are drawing "
"polygons, and then ``plot`` would **close the segments to form "
"polygons**. Also, when plotting polygons the default behavior of ``plot``"
" command is to draw edges only instead of color filling. Therefore, we "
"need to add ``-C`` telling GMT we are filling these polygons using the "
"newly made colormap."

#: ../../SOURCE_DOCS/plot_vector_data.rst:168
msgid "這下子七巧板也有模有樣了！我們順便來加上邊框："
msgstr ""
"Now this tangram is really fleshing out! Here we are also adding the edges:"

#: ../../SOURCE_DOCS/plot_vector_data.rst:170
msgid ""
"gmt begin pieces png\n"
"    gmt makecpt -Cwysiwyg -T0/20/1\n"
"    gmt plot pieces.txt -R0/4/0/4 -JX15c -L -C -W2p,black\n"
"gmt end"
msgstr ""
"gmt begin pieces png\n"
"    gmt makecpt -Cwysiwyg -T0/20/1\n"
"    gmt plot pieces.txt -R0/4/0/4 -JX15c -L -C -W2p,black\n"
"gmt end"

#: ../../SOURCE_DOCS/plot_vector_data.rst:181
msgid ""
"看起來非常不錯，不過請注意到圖片邊框，線段的寬度似乎跟圖片內部多邊形邊緣線段寬度不一樣。這是因為 GMT 會沿著多邊形的邊緣 "
"(而不是黑色線段的邊緣) "
"裁剪影像，因此邊框的線段寬度會變成原本的一半。如果你覺得這沒關係，那倒無妨；但如果你是個完美主義者，不想看到不一致的線段寬度，可以選擇的替代方案，就是把多邊形邊框挪到"
" ``lines.txt`` 裡面做成線段資料，與網格線條一起繪製。因此，我們的 ``lines.txt`` 要多增加幾行資訊："
msgstr ""
"Almost perfect. There is only one little thing: the line at the edge of "
"the figure seems thinner than the edges of the polygons inside the "
"tangram. This is because GMT cuts the image by the edge of the polygons "
"instead of the edge of the black lines; therefore, the edge width would "
"be only half of the original width. If you think this is ok, great; but "
"if you are a perfectionist and don't want to see the lines not consistent"
" in width, here's another way for you: add the polygon edges to "
"``lines.txt`` as segment data so that they will be plotted with the grid "
"lines. To do this, open ``lines.txt`` and add more lines at the bottom:"

#: ../../SOURCE_DOCS/plot_vector_data.rst:185
msgid ""
"> -W1p,grey,.\n"
"# 注意我改動了網格線段的樣式設定！\n"
"1 0\n"
"1 4\n"
">\n"
"2 0\n"
"2 4\n"
">\n"
"3 0\n"
"3 4\n"
">\n"
"0 1\n"
"4 1\n"
">\n"
"0 2\n"
"4 2\n"
">\n"
"0 3\n"
"4 3\n"
"> -W2p,black\n"
"0 0\n"
"4 0\n"
"4 4\n"
"0 4\n"
"0 0\n"
">\n"
"0 4\n"
"4 0\n"
">\n"
"0 0\n"
"3 3\n"
">\n"
"3 1\n"
"3 3\n"
">\n"
"1 3\n"
"2 4\n"
">\n"
"2 4\n"
"4 2"
msgstr ""
"> -W1p,grey,.\n"
"# Note tht I changed the style of the grid lines!\n"
"1 0\n"
"1 4\n"
">\n"
"2 0\n"
"2 4\n"
">\n"
"3 0\n"
"3 4\n"
">\n"
"0 1\n"
"4 1\n"
">\n"
"0 2\n"
"4 2\n"
">\n"
"0 3\n"
"4 3\n"
"> -W2p,black\n"
"0 0\n"
"4 0\n"
"4 4\n"
"0 4\n"
"0 0\n"
">\n"
"0 4\n"
"4 0\n"
">\n"
"0 0\n"
"3 3\n"
">\n"
"3 1\n"
"3 3\n"
">\n"
"1 3\n"
"2 4\n"
">\n"
"2 4\n"
"4 2"

#: ../../SOURCE_DOCS/plot_vector_data.rst:228
msgid "後半從 ``> -W2p,black`` 開始的部份，就是七巧板邊框與拼圖的邊界線段。讓我們再試一次以下指令："
msgstr ""
"The last half part (starting from ``> -W2p,black``) is the polygon edges "
"in the tangram. Let us retry these commands:"

#: ../../SOURCE_DOCS/plot_vector_data.rst:238
msgid ""
"看起來賞心悅目多了！最後的問題，就是把多邊形和線條疊加在一起而不擋到彼此。這個問題可以簡單的以具有\\ **透明度**\\ "
"設定的色階解決。``makecpt`` 的 ``-A`` 選項可以用來指定透明度，我們來試著在終端機中輸入："
msgstr ""
"Ok now it looks much better. Our last problem is to add all lines and "
"polygons together on this figure without blocking any of them. We can "
"simply set up a colormap with **transparency** settings and solve this "
"problem. The ``-A`` option of ``makecpt`` is used to specify "
"transparency. Let's enter this on the terminal:"

#: ../../SOURCE_DOCS/plot_vector_data.rst:240
msgid ""
"$ gmt makecpt -Cwysiwyg -T0/20/1 -A70   # -A: %70 透明\n"
"0    64/0/64@70    1    64/0/64@70\n"
"1    64/0/192@70   2    64/0/192@70\n"
"... (以下略)"
msgstr ""
"$ gmt makecpt -Cwysiwyg -T0/20/1 -A70   # -A: %70 transparent\n"
"0    64/0/64@70    1    64/0/64@70\n"
"1    64/0/192@70   2    64/0/192@70\n"
"... (skipping)"

#: ../../SOURCE_DOCS/plot_vector_data.rst:247
msgid ""
"在色階資料中，``@`` "
"符號後面的就是透明度，因此整個顏色的格式為：``紅/綠/藍@透明度``。使用此色階畫圖，所有的顏色就會被套上透明度設定。這下子你就能看到透明、粉嫩粉嫩的顏色了！"
msgstr ""
"In the colormap information, the number after ``@`` is the transparency "
"value. The full format of color thus becomes ``R/G/B@Transparency``. Use "
"this colormap for drawing the figure and you will see all the colors "
"being transparently painted. Seems cute, doesn't it?"

#: ../../SOURCE_DOCS/plot_vector_data.rst:270
msgid "指令稿"
msgstr "Script"

#: ../../SOURCE_DOCS/plot_vector_data.rst:271
msgid "本圖片的最終指令稿如下："
msgstr "The final script for the image is:"

#: ../../SOURCE_DOCS/plot_vector_data.rst:273
msgid ""
"gmt begin tangram_gmt6 png\n"
"    gmt makecpt -Cwysiwyg -T0/20/1 -A70\n"
"    gmt basemap -R0/4/0/4 -JX15c -Bnews    # 設定座標軸範圍 (-R) 的同時，不畫出座標軸 "
"(-Bnews)\n"
"    gmt plot pieces.txt -L -C\n"
"    gmt plot lines.txt                     # "
"先填色再畫邊框，確保邊框會疊在填色上面。你可以試試看把這一行移到更上方，確認透明度的效果設定。\n"
"gmt end"
msgstr ""
"gmt begin tangram_gmt6 png\n"
"    gmt makecpt -Cwysiwyg -T0/20/1 -A70\n"
"    gmt basemap -R0/4/0/4 -JX15c -Bnews    # setting the axis ranges (-R) "
"while not plotting the axes themselves (-Bnews)\n"
"    gmt plot pieces.txt -L -C\n"
"    gmt plot lines.txt                     # filling first and edges later. "
"This makes sure the lines would be on the top, above the filling. You can "
"try to move this line to an earlier place in the script and see what the "
"transparency settings can do.\n"
"gmt end"

#: ../../SOURCE_DOCS/plot_vector_data.rst:282
msgid ""
"線段資料 ``lines.txt`` 內容如下，並\\ :download:`可在這裡下載 "
"<plot_vector_data/lines.txt>`\\ 。"
msgstr ""
"The segment data ``lines.txt`` are as follows, and are available for "
"downloading :download:`here <plot_vector_data/lines.txt>`."

#: ../../SOURCE_DOCS/plot_vector_data.rst:284
msgid ""
"> -W1p,grey,.\n"
"1 0\n"
"1 4\n"
">\n"
"2 0\n"
"2 4\n"
">\n"
"3 0\n"
"3 4\n"
">\n"
"0 1\n"
"4 1\n"
">\n"
"0 2\n"
"4 2\n"
">\n"
"0 3\n"
"4 3\n"
"> -W2p,black\n"
"0 0\n"
"4 0\n"
"4 4\n"
"0 4\n"
"0 0\n"
">\n"
"0 4\n"
"4 0\n"
">\n"
"0 0\n"
"3 3\n"
">\n"
"3 1\n"
"3 3\n"
">\n"
"1 3\n"
"2 4\n"
">\n"
"2 4\n"
"4 2"
msgstr ""
"> -W1p,grey,.\n"
"1 0\n"
"1 4\n"
">\n"
"2 0\n"
"2 4\n"
">\n"
"3 0\n"
"3 4\n"
">\n"
"0 1\n"
"4 1\n"
">\n"
"0 2\n"
"4 2\n"
">\n"
"0 3\n"
"4 3\n"
"> -W2p,black\n"
"0 0\n"
"4 0\n"
"4 4\n"
"0 4\n"
"0 0\n"
">\n"
"0 4\n"
"4 0\n"
">\n"
"0 0\n"
"3 3\n"
">\n"
"3 1\n"
"3 3\n"
">\n"
"1 3\n"
"2 4\n"
">\n"
"2 4\n"
"4 2"

#: ../../SOURCE_DOCS/plot_vector_data.rst:326
msgid ""
"多邊形資料 ``pieces.txt`` 內容如下，並\\ :download:`可在這裡下載 "
"<plot_vector_data/pieces.txt>`\\ 。"
msgstr ""
"The polygon data ``pieces.txt`` are as follows, and are available at "
":download:`here <plot_vector_data/pieces.txt>`."

#: ../../SOURCE_DOCS/plot_vector_data.rst:363
msgid "「使用 ``wysiwyg`` 作為母色階並加上透明度設定，接下來繪製七巧板填色、座標格線與七巧板邊線。」"
msgstr ""
"\"Use ``wysiwyg`` as the master colormap and add transparency settings, "
"and then draw tangram polygons with color filling, grid lines, and the "
"edge of each polygon.\""

#: ../../SOURCE_DOCS/plot_vector_data.rst:367
msgid "觀看\\ `最終版圖片`_"
msgstr "Check the `final figure`_"

#: ../../SOURCE_DOCS/plot_vector_data.rst:370
msgid "習題"
msgstr "Exercise"

#: ../../SOURCE_DOCS/plot_vector_data.rst:371
msgid "畫出六面體骰子的任一種展開圖，使用 ``wysiwyg`` 作為母色階為每面塗上不同的顏色。"
msgstr ""
"Draw a net of dice (6 faces). Use ``wysiwyg`` to fill each face with a "
"different color."

#: ../../SOURCE_DOCS/plot_vector_data.rst:373
msgid "What You See Is What You Get, 即「所見即所得」。"
msgstr "What You See Is What You Get."

#~ msgid "$ gmt plot 輸入檔名稱 [選項...]"
#~ msgstr "$ gmt plot input_file [-options]"

#~ msgid ""
#~ "# (所有以 # 號開頭的行都會被解讀成註解)\n"
#~ "> [線段 1 的設定]\n"
#~ "線段 1 的頂點 1\n"
#~ "線段 1 的頂點 2\n"
#~ "...\n"
#~ "> [線段 2 的設定]\n"
#~ "線段 2 的頂點 1\n"
#~ "線段 2 的頂點 2\n"
#~ "...\n"
#~ "> [線段 3 的設定]\n"
#~ "..."
#~ msgstr ""
#~ "# (all lines starting with \"#\" will be interpreted as comments)\n"
#~ "> [settings of segment 1]\n"
#~ "segment 1, vertex 1\n"
#~ "segment 1, vertex 2\n"
#~ "...\n"
#~ "> [settings of segment 2]\n"
#~ "segment 2, vertex 1\n"
#~ "segment 2, vertex 2\n"
#~ "...\n"
#~ "> [settings of segment 3]\n"
#~ "..."

#~ msgid ""
#~ "> -W3p,black,.\n"
#~ "1 0\n"
#~ "1 4\n"
#~ ">\n"
#~ "2 0\n"
#~ "2 4\n"
#~ ">\n"
#~ "3 0\n"
#~ "3 4\n"
#~ ">\n"
#~ "0 1\n"
#~ "4 1\n"
#~ ">\n"
#~ "0 2\n"
#~ "4 2\n"
#~ ">\n"
#~ "0 3\n"
#~ "4 3"
#~ msgstr ""
#~ "> -W3p,black,.\n"
#~ "1 0\n"
#~ "1 4\n"
#~ ">\n"
#~ "2 0\n"
#~ "2 4\n"
#~ ">\n"
#~ "3 0\n"
#~ "3 4\n"
#~ ">\n"
#~ "0 1\n"
#~ "4 1\n"
#~ ">\n"
#~ "0 2\n"
#~ "4 2\n"
#~ ">\n"
#~ "0 3\n"
#~ "4 3"

#~ msgid "$ gmt plot lines.txt -R0/4/0/4 -JX15c -png lines"
#~ msgstr "$ gmt plot lines.txt -R0/4/0/4 -JX15c -png lines"

#~ msgid ""
#~ "> [多邊形 1 的設定]\n"
#~ "多邊形 1 的頂點 1\n"
#~ "多邊形 1 的頂點 2\n"
#~ "多邊形 1 的頂點 3\n"
#~ "...\n"
#~ "> [多邊形 2 的設定]\n"
#~ "..."
#~ msgstr ""
#~ "> [settings of polygon 1]\n"
#~ "polygon 1 vertex 1\n"
#~ "polygon 1 vertex 2\n"
#~ "polygon 1 vertex 3\n"
#~ "...\n"
#~ "> [settings of polygon 2]\n"
#~ "..."

#~ msgid ""
#~ "> -Z0\n"
#~ "0 0\n"
#~ "2 2\n"
#~ "4 0\n"
#~ "> -Z3\n"
#~ "0 0\n"
#~ "2 2\n"
#~ "0 4\n"
#~ "> -Z6\n"
#~ "0 4\n"
#~ "1 3\n"
#~ "2 4\n"
#~ "> -Z9\n"
#~ "1 3\n"
#~ "2 4\n"
#~ "3 3\n"
#~ "2 2\n"
#~ "> -Z12\n"
#~ "3 3\n"
#~ "2 2\n"
#~ "3 1\n"
#~ "> -Z15\n"
#~ "3 1\n"
#~ "3 3\n"
#~ "4 2\n"
#~ "4 0\n"
#~ "> -Z18\n"
#~ "2 4\n"
#~ "4 2\n"
#~ "4 4"
#~ msgstr ""
#~ "> -Z0\n"
#~ "0 0\n"
#~ "2 2\n"
#~ "4 0\n"
#~ "> -Z3\n"
#~ "0 0\n"
#~ "2 2\n"
#~ "0 4\n"
#~ "> -Z6\n"
#~ "0 4\n"
#~ "1 3\n"
#~ "2 4\n"
#~ "> -Z9\n"
#~ "1 3\n"
#~ "2 4\n"
#~ "3 3\n"
#~ "2 2\n"
#~ "> -Z12\n"
#~ "3 3\n"
#~ "2 2\n"
#~ "3 1\n"
#~ "> -Z15\n"
#~ "3 1\n"
#~ "3 3\n"
#~ "4 2\n"
#~ "4 0\n"
#~ "> -Z18\n"
#~ "2 4\n"
#~ "4 2\n"
#~ "4 4"

#~ msgid ""
#~ "gmt begin pieces png\n"
#~ "    gmt makecpt -Cwysiwyg -T0/20/1    # 色階數值範圍為 0 至 20，每隔 1 取樣\n"
#~ "    gmt plot pieces.txt -R0/4/0/4 -JX15c -L -C\n"
#~ "gmt end"
#~ msgstr ""
#~ "gmt begin pieces png\n"
#~ "    gmt makecpt -Cwysiwyg -T0/20/1    #"
#~ " colormap range is 0 to 20, "
#~ "sampled with an interval of 1\n"
#~ "    gmt plot pieces.txt -R0/4/0/4 -JX15c -L -C\n"
#~ "gmt end"

#~ msgid ""
#~ "gmt begin pieces png\n"
#~ "    gmt makecpt -Cwysiwyg -T0/20/1\n"
#~ "    gmt plot pieces.txt -R0/4/0/4 -JX15c -L -C -W2p,black\n"
#~ "gmt end"
#~ msgstr ""
#~ "gmt begin pieces png\n"
#~ "    gmt makecpt -Cwysiwyg -T0/20/1\n"
#~ "    gmt plot pieces.txt -R0/4/0/4 -JX15c -L -C -W2p,black\n"
#~ "gmt end"

#~ msgid ""
#~ "> -W1p,grey,.\n"
#~ "# 注意我改動了網格線段的樣式設定！\n"
#~ "1 0\n"
#~ "1 4\n"
#~ ">\n"
#~ "2 0\n"
#~ "2 4\n"
#~ ">\n"
#~ "3 0\n"
#~ "3 4\n"
#~ ">\n"
#~ "0 1\n"
#~ "4 1\n"
#~ ">\n"
#~ "0 2\n"
#~ "4 2\n"
#~ ">\n"
#~ "0 3\n"
#~ "4 3\n"
#~ "> -W2p,black\n"
#~ "0 0\n"
#~ "4 0\n"
#~ "4 4\n"
#~ "0 4\n"
#~ "0 0\n"
#~ ">\n"
#~ "0 4\n"
#~ "4 0\n"
#~ ">\n"
#~ "0 0\n"
#~ "3 3\n"
#~ ">\n"
#~ "3 1\n"
#~ "3 3\n"
#~ ">\n"
#~ "1 3\n"
#~ "2 4\n"
#~ ">\n"
#~ "2 4\n"
#~ "4 2"
#~ msgstr ""
#~ "> -W1p,grey,.\n"
#~ "# Note tht I changed the style of the grid lines!\n"
#~ "1 0\n"
#~ "1 4\n"
#~ ">\n"
#~ "2 0\n"
#~ "2 4\n"
#~ ">\n"
#~ "3 0\n"
#~ "3 4\n"
#~ ">\n"
#~ "0 1\n"
#~ "4 1\n"
#~ ">\n"
#~ "0 2\n"
#~ "4 2\n"
#~ ">\n"
#~ "0 3\n"
#~ "4 3\n"
#~ "> -W2p,black\n"
#~ "0 0\n"
#~ "4 0\n"
#~ "4 4\n"
#~ "0 4\n"
#~ "0 0\n"
#~ ">\n"
#~ "0 4\n"
#~ "4 0\n"
#~ ">\n"
#~ "0 0\n"
#~ "3 3\n"
#~ ">\n"
#~ "3 1\n"
#~ "3 3\n"
#~ ">\n"
#~ "1 3\n"
#~ "2 4\n"
#~ ">\n"
#~ "2 4\n"
#~ "4 2"

#~ msgid ""
#~ "$ gmt makecpt -Cwysiwyg -T0/20/1 -A70   # -A: %70 透明\n"
#~ "0    64/0/64@70    1    64/0/64@70\n"
#~ "1    64/0/192@70   2    64/0/192@70\n"
#~ "... (以下略)"
#~ msgstr ""
#~ "$ gmt makecpt -Cwysiwyg -T0/20/1 -A70   # -A: 70% transparent\n"
#~ "0    64/0/64@70    1    64/0/64@70\n"
#~ "1    64/0/192@70   2    64/0/192@70\n"
#~ "... (skipping)"

#~ msgid ""
#~ "gmt begin tangram_gmt6 png\n"
#~ "    gmt makecpt -Cwysiwyg -T0/20/1 -A70\n"
#~ "    gmt basemap -R0/4/0/4 -JX15c -Bnews"
#~ "    # 設定座標軸範圍 (-R) 的同時，不畫出座標軸 (-Bnews)\n"
#~ ""
#~ "    gmt plot pieces.txt -L -C\n"
#~ "    gmt plot lines.txt                     #"
#~ " 先填色再畫邊框，確保邊框會疊在填色上面。你可以試試看把這一行移到更上方，確認透明度的效果設定。\n"
#~ "gmt end"
#~ msgstr ""
#~ "gmt begin tangram_gmt6 png\n"
#~ "    gmt makecpt -Cwysiwyg -T0/20/1 -A70\n"
#~ "    gmt basemap -R0/4/0/4 -JX15c -Bnews"
#~ "    # setting the axis ranges (-R)"
#~ " while not plotting the axes "
#~ "themselves (-Bnews)\n"
#~ "    gmt plot pieces.txt -L -C\n"
#~ "    gmt plot lines.txt                     #"
#~ " filling first and edges later. This"
#~ " makes sure the lines would be "
#~ "on the top, above the filling. You"
#~ " can try to move this line to"
#~ " an earlier place in the script "
#~ "and see what the transparency settings"
#~ " can do.\n"
#~ "gmt end"

#~ msgid ""
#~ "> -W1p,grey,.\n"
#~ "1 0\n"
#~ "1 4\n"
#~ ">\n"
#~ "2 0\n"
#~ "2 4\n"
#~ ">\n"
#~ "3 0\n"
#~ "3 4\n"
#~ ">\n"
#~ "0 1\n"
#~ "4 1\n"
#~ ">\n"
#~ "0 2\n"
#~ "4 2\n"
#~ ">\n"
#~ "0 3\n"
#~ "4 3\n"
#~ "> -W2p,black\n"
#~ "0 0\n"
#~ "4 0\n"
#~ "4 4\n"
#~ "0 4\n"
#~ "0 0\n"
#~ ">\n"
#~ "0 4\n"
#~ "4 0\n"
#~ ">\n"
#~ "0 0\n"
#~ "3 3\n"
#~ ">\n"
#~ "3 1\n"
#~ "3 3\n"
#~ ">\n"
#~ "1 3\n"
#~ "2 4\n"
#~ ">\n"
#~ "2 4\n"
#~ "4 2"
#~ msgstr ""
#~ "> -W1p,grey,.\n"
#~ "1 0\n"
#~ "1 4\n"
#~ ">\n"
#~ "2 0\n"
#~ "2 4\n"
#~ ">\n"
#~ "3 0\n"
#~ "3 4\n"
#~ ">\n"
#~ "0 1\n"
#~ "4 1\n"
#~ ">\n"
#~ "0 2\n"
#~ "4 2\n"
#~ ">\n"
#~ "0 3\n"
#~ "4 3\n"
#~ "> -W2p,black\n"
#~ "0 0\n"
#~ "4 0\n"
#~ "4 4\n"
#~ "0 4\n"
#~ "0 0\n"
#~ ">\n"
#~ "0 4\n"
#~ "4 0\n"
#~ ">\n"
#~ "0 0\n"
#~ "3 3\n"
#~ ">\n"
#~ "3 1\n"
#~ "3 3\n"
#~ ">\n"
#~ "1 3\n"
#~ "2 4\n"
#~ ">\n"
#~ "2 4\n"
#~ "4 2"
